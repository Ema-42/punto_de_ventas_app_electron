datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model Rol {
  id        Int       @id @default(autoincrement())
  nombre    String
  eliminado Boolean?  @default(false)
  usuarios  Usuario[]
}

model Usuario {
  id             Int       @id @default(autoincrement())
  nombre         String
  password       String
  rol_id         Int
  eliminado      Boolean?  @default(false)
  fecha_creacion DateTime? @default(now())

  rol           Rol       @relation(fields: [rol_id], references: [id])
  cajeroPedidos Pedido[]  @relation("CajeroRelation")
  meseroPedidos Pedido[]  @relation("MeseraRelation")
  ingresos      Ingreso[]
}

model Mesa {
  id             Int       @id @default(autoincrement())
  numero         Int
  estado         String    @default("LIBRE") // "LIBRE" o "OCUPADA"
  eliminado      Boolean?  @default(false)
  fecha_creacion DateTime? @default(now())
  pedidos        Pedido[]
}

model CategoriaProducto {
  id             Int        @id @default(autoincrement())
  nombre         String
  eliminado      Boolean?   @default(false)
  fecha_creacion DateTime?  @default(now())
  productos      Producto[]
}

model Producto {
  id             Int      @id @default(autoincrement())
  nombre         String
  precio         Decimal
  imagen_url     String?
  categoria_id   Int
  maneja_stock   Boolean  @default(false) // true = requiere control de stock
  stock          Int      @default(0)
  fecha_creacion DateTime @default(now())
  eliminado      Boolean? @default(false)

  categoria      CategoriaProducto @relation(fields: [categoria_id], references: [id])
  detallesPedido DetallePedido[]
  detalleIngreso DetalleIngreso[]
}

model Pedido {
  id              Int       @id @default(autoincrement())
  pedido_padre_id Int?
  tipo_pago       String?
  mesa_id         Int?
  mesera_id       Int
  cajero_id       Int
  num_pedido_dia  Int?
  estado          String? // "EN_ATENCION" o "CONCLUIDO"
  fecha_creacion  DateTime  @default(now())
  fecha_concluido DateTime?
  total           Decimal?  @default(0)
  eliminado       Boolean?  @default(false)

  pedido_padre  Pedido?         @relation("PedidoPadreRelation", fields: [pedido_padre_id], references: [id])
  pedidos_hijos Pedido[]        @relation("PedidoPadreRelation")
  mesa          Mesa?           @relation(fields: [mesa_id], references: [id])
  mesera        Usuario         @relation("MeseraRelation", fields: [mesera_id], references: [id])
  cajero        Usuario         @relation("CajeroRelation", fields: [cajero_id], references: [id])
  detalles      DetallePedido[]
}

model DetallePedido {
  id              Int      @id @default(autoincrement())
  pedido_id       Int
  pedido          Pedido   @relation(fields: [pedido_id], references: [id])
  producto_id     Int
  producto        Producto @relation(fields: [producto_id], references: [id])
  cantidad        Int
  precio_unitario Decimal
  eliminado       Boolean? @default(false)
}

model Ingreso {
  id            Int      @id @default(autoincrement())
  fecha_ingreso DateTime @default(now())
  usuario_id    Int
  estado        String?
  eliminado     Boolean? @default(false)
  total         Decimal? @default(0)

  usuario  Usuario          @relation(fields: [usuario_id], references: [id])
  detalles DetalleIngreso[]
}

model DetalleIngreso {
  id              Int      @id @default(autoincrement())
  ingreso_id      Int
  producto_id     Int
  cantidad        Int
  precio_unitario Decimal
  eliminado       Boolean? @default(false)

  ingreso  Ingreso  @relation(fields: [ingreso_id], references: [id])
  producto Producto @relation(fields: [producto_id], references: [id])
}
